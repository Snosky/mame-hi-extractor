{"version":3,"sources":["webpack://MameHiExtractor/webpack/universalModuleDefinition","webpack://MameHiExtractor/webpack/bootstrap","webpack://MameHiExtractor/./src/Decorator/Extractor.ts","webpack://MameHiExtractor/./src/AbstractExtractor.ts","webpack://MameHiExtractor/./src/Extractor/Aburner.ts","webpack://MameHiExtractor/./src/Extractor/Ddragon.ts","webpack://MameHiExtractor/./src/Extractor/Galaga.ts","webpack://MameHiExtractor/./src/Extractor/Invaddlx.ts","webpack://MameHiExtractor/./src/Extractor/Mk.ts","webpack://MameHiExtractor/./src/main.ts","webpack://MameHiExtractor/./src/Extractors.ts","webpack://MameHiExtractor/./src/Extractor/1941.ts","webpack://MameHiExtractor/external \"fs\"","webpack://MameHiExtractor/./src/MHEBuffer.ts","webpack://MameHiExtractor/external \"path\"","webpack://MameHiExtractor/./src/Extractor/1943.ts","webpack://MameHiExtractor/./src/Extractor/Altbeast.ts","webpack://MameHiExtractor/./src/Extractor/Arkanoid.ts","webpack://MameHiExtractor/./src/Extractor/Asteroid.ts","webpack://MameHiExtractor/./src/Extractor/Bombjack.ts","webpack://MameHiExtractor/./src/Extractor/Snowbro2.ts","webpack://MameHiExtractor/./src/Extractor/Kungfum.ts","webpack://MameHiExtractor/./src/Extractor/Smashtv.ts","webpack://MameHiExtractor/./src/Extractor/Spf2t.ts","webpack://MameHiExtractor/./src/Extractor/Jumpbug.ts","webpack://MameHiExtractor/./src/Extractor/Mario.ts","webpack://MameHiExtractor/./src/Extractor/Scontra.ts","webpack://MameHiExtractor/./src/Extractor/Chasehq.ts","webpack://MameHiExtractor/./src/Extractor/Dkong.ts","webpack://MameHiExtractor/./src/Extractor/Robocop.ts","webpack://MameHiExtractor/./src/Extractor/Ddsom.ts","webpack://MameHiExtractor/./src/Extractor/Paperboy.ts","webpack://MameHiExtractor/./src/Extractor/Sf2.ts","webpack://MameHiExtractor/./src/Extractor/Toki.ts","webpack://MameHiExtractor/./src/Extractor/Xmvsf.ts","webpack://MameHiExtractor/./src/Extractor/Starwars.ts","webpack://MameHiExtractor/./src/Extractor/Tetris.ts","webpack://MameHiExtractor/./src/Extractor/Gunsmoke.ts","webpack://MameHiExtractor/./src/Extractor/Jackal.ts","webpack://MameHiExtractor/./src/Extractor/Marble.ts","webpack://MameHiExtractor/./src/Extractor/Insectx.ts","webpack://MameHiExtractor/./src/Extractor/Mappy.ts","webpack://MameHiExtractor/./src/Extractor/Pang.ts","webpack://MameHiExtractor/./src/Extractor/Popeye.ts","webpack://MameHiExtractor/./src/Extractor/Qbert.ts","webpack://MameHiExtractor/./src/Extractor/Rtype.ts","webpack://MameHiExtractor/./src/Extractor/Pengo.ts","webpack://MameHiExtractor/./src/Extractor/Tmnt.ts","webpack://MameHiExtractor/./src/Extractor/Wboy.ts","webpack://MameHiExtractor/./src/Extractor/Gng.ts","webpack://MameHiExtractor/./src/Extractor/Centiped.ts","webpack://MameHiExtractor/./src/Extractor/Pacland.ts","webpack://MameHiExtractor/./src/Extractor/Bosco.ts","webpack://MameHiExtractor/./src/Extractor/Shinobi.ts","webpack://MameHiExtractor/./src/Extractor/Robotron.ts","webpack://MameHiExtractor/./src/Extractor/Trackfld.ts","webpack://MameHiExtractor/./src/Extractor/Tutankhm.ts","webpack://MameHiExtractor/./src/Extractor/Dangar.ts","webpack://MameHiExtractor/./src/Extractor/Dkong3.ts","webpack://MameHiExtractor/./src/Extractor/Digdug.ts","webpack://MameHiExtractor/./src/Extractor/Joust.ts","webpack://MameHiExtractor/./src/Extractor/Mslug2.ts","webpack://MameHiExtractor/./src/Extractor/Btime.ts","webpack://MameHiExtractor/./src/Extractor/Jack.ts","webpack://MameHiExtractor/./src/Extractor/Suprmrio.ts","webpack://MameHiExtractor/./src/Extractor/Donpachi.ts","webpack://MameHiExtractor/./src/Extractor/Hyperspt.ts","webpack://MameHiExtractor/./src/Extractor/Mwalk.ts","webpack://MameHiExtractor/./src/Extractor/Xevious.ts","webpack://MameHiExtractor/./src/Extractor/Dkongjr.ts","webpack://MameHiExtractor/./src/Extractor/Columns.ts","webpack://MameHiExtractor/./src/Extractor/Simpsons.ts","webpack://MameHiExtractor/./src/Extractor/Punchout.ts","webpack://MameHiExtractor/./src/Extractor/Bublbobl.ts","webpack://MameHiExtractor/./src/Extractor/Defender.ts","webpack://MameHiExtractor/./src/Extractor/Pacmania.ts","webpack://MameHiExtractor/./src/Extractor/Spang.ts","webpack://MameHiExtractor/./src/Extractor/Invadpt2.ts","webpack://MameHiExtractor/./src/Extractor/Aburner2.ts","webpack://MameHiExtractor/./src/Extractor/Ddragon2.ts","webpack://MameHiExtractor/./src/Extractor/Galagamk.ts","webpack://MameHiExtractor/./src/Extractor/Hsf2.ts","webpack://MameHiExtractor/./src/Extractor/Mk2.ts","webpack://MameHiExtractor/./src/Extractor/Mslug.ts","webpack://MameHiExtractor/./src/Extractor/88games.ts","webpack://MameHiExtractor/./src/Extractor/Outrun.ts","webpack://MameHiExtractor/./src/Extractor/Outzone.ts","webpack://MameHiExtractor/./src/Extractor/Bouldash.ts","webpack://MameHiExtractor/./src/Extractor/Snowbros.ts","webpack://MameHiExtractor/./src/Extractor/Intrepid.ts"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","default","options","constructor","[object Object]","this","gameName","hasHi","undefined","hi","nvramName","nvram","fs_1","MHEBuffer_1","__importDefault","path_1","output","filePath","readFileSync","join","extract","scores","AbstractExtractor_1","Aburner","currentByte","push","rank","score","parseInt","buffer","readIntBE","toString","slice","__decorate","Ddragon","charset","59","60","Galaga","trim","decodeBCDLE","Invaddlx","26","27","readIntLE","Mk","byteSkip","Extractors_1","dir","romName","init","_1941_1","_1943_1","Aburner_1","Altbeast_1","Arkanoid_1","Asteroid_1","Bombjack_1","Snowbro2_1","Kungfum_1","Smashtv_1","Spf2t_1","Jumpbug_1","Mario_1","Scontra_1","Chasehq_1","Dkong_1","Ddragon_1","Robocop_1","Ddsom_1","Paperboy_1","Sf2_1","Toki_1","Xmvsf_1","Starwars_1","Tetris_1","Gunsmoke_1","Jackal_1","Marble_1","Insectx_1","Mappy_1","Pang_1","Popeye_1","Qbert_1","Rtype_1","Pengo_1","Galaga_1","Invaddlx_1","Tmnt_1","Wboy_1","Mk_1","Gng_1","Centiped_1","Pacland_1","Bosco_1","Shinobi_1","Robotron_1","Trackfld_1","Tutankhm_1","Dangar_1","Dkong3_1","Digdug_1","Joust_1","Mslug2_1","Btime_1","Jack_1","Suprmrio_1","Donpachi_1","Hyperspt_1","Mwalk_1","Xevious_1","Dkongjr_1","Columns_1","Simpsons_1","Punchout_1","Bublbobl_1","Defender_1","Pacmania_1","Spang_1","Invadpt2_1","Aburner2_1","Ddragon2_1","Galagamk_1","Hsf2_1","Mk2_1","Mslug_1","_88games_1","Outrun_1","Outzone_1","Bouldash_1","Snowbros_1","Intrepid_1","extractorsArray","extractors","extractor","Extractor1941","require","MHEBuffer","file","Buffer","from","begin","size","trimNeedle","buf","byteLength","originValue","ctable","shiftState","result","tmp","Math","round","len","floor","charId","even","length","isEven","fn","map","offset","newBuffer","readUIntLE","rtl","str","split","reverse","swap","ret","y","filteredBytes","Array","isArray","byte","indexOf","entries","charCodeAt","uint16","readUInt16BE","mask","maskBuffer","Extractor1943","36","43","44","58","98","100","102","decodeBCD","Altbeast","Arkanoid","Asteroid","currentBytes","Bombjack","0","46","Extractor_1","Snowbro2","Kungfum","32","91","abs","Smashtv","Spf2t","28","29","30","31","33","34","35","37","38","39","40","41","42","45","Jumpbug","toStringLE","getScore","startByte","nibbleSkip","Mario","Scontra","11","12","13","14","15","16","Chasehq","Dkong","Robocop","Ddsom","108","109","110","111","114","115","116","119","120","121","122","123","124","125","126","127","128","129","255","Paperboy","Sf2","Toki","92","93","Xmvsf","Starwars","Tetris","94","Gunsmoke","1","2","3","4","5","6","7","8","9","47","52","53","62","64","65","67","69","72","73","74","78","96","97","99","101","104","Jackal","Marble","decodeBase40","Insectx","Mappy","95","Pang","Popeye","positions","readUInt8","Qbert","byteFilter","toHexNumber","Rtype","63","byteSwap","Pengo","Tmnt","Wboy","Gng","sort","a","b","Centiped","extractNvram","extractHi","startRank","Pacland","228","229","230","231","Bosco","Shinobi","Robotron","Trackfld","extraIds","extras","extra","scoreSuffix","Number","decodeBase32","Tutankhm","Dangar","Dkong3","Digdug","55","nameByte","Joust","10","50","daily","Mslug2","Btime","204","205","206","207","Jack","Suprmrio","175","250","Donpachi","56","byteMap","Hyperspt","formatScore","getScoreSuffix","id","Mwalk","Xevious","54","57","61","66","68","70","71","75","76","77","79","80","Dkongjr","Columns","Simpsons","Punchout","Bublbobl","Defender","Pacmania","Spang","130","132","134","136","138","140","142","160","162","164","166","168","170","172","174","192","194","196","198","200","202","224","226","panic","Invadpt2","Aburner2","Ddragon2","Galagamk","Hsf2","Mk2","Mslug","2946","2948","2950","2952","2954","2956","2958","3200","3202","3204","3206","3208","3210","3212","3214","2976","2978","2980","2982","2984","2986","2988","2990","3232","3234","3236","2912","2914","2916","2918","2920","2922","2924","2926","3168","3170","3182","2882","3148","2880","toString16","Extractor88Games","extraCharset","defaultCharset","test","Outrun","Outzone","byteMask","Bouldash","Snowbros","Intrepid","253"],"mappings":"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","file":"MameHiExtractor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"MameHiExtractor\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MameHiExtractor\"] = factory();\n\telse\n\t\troot[\"MameHiExtractor\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import {ExtractorOptions} from \"../interfaces\";\n\nexport default function Extractor(options: ExtractorOptions) {\n    return <T extends {new(...args:any[]):{}}>(constructor:T) => {\n        return class extends constructor {\n            gameName = options.name;\n            hasHi = options.hi === undefined ? true : options.hi;\n            nvramName = options.nvram || false;\n        }\n    }\n}\n","import {readFileSync} from \"fs\";\nimport MHEBuffer from \"./MHEBuffer\";\nimport {join} from 'path';\nimport {Output} from \"./interfaces\";\n\nexport default abstract class AbstractExtractor {\n    private gameName = '';\n    private hasHi = false;\n    private nvramName = '';\n\n    protected hi?: MHEBuffer;\n    protected nvram?: MHEBuffer;\n\n    protected output: Output = {default: []};\n\n    public init(filePath: string) {\n        if (this.hasHi) {\n            this.hi = new MHEBuffer(readFileSync(join(filePath, 'hi', this.gameName + '.hi')));\n        }\n        if (this.nvramName) {\n            this.nvram = new MHEBuffer(readFileSync(join(filePath, 'nvram', this.gameName, this.nvramName)))\n        }\n        this.output = {default: []};\n        this.extract();\n        return this;\n    }\n\n    abstract extract(): any;\n\n    public get scores(): Output {\n        return this.output;\n    }\n\n    public get name(): string {\n        return this.gameName;\n    }\n}\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n/**\n * FIXME : Not Tested\n */\n@Extractor({\n    name: 'aburner',\n    hi: true\n})\nexport default class Aburner extends AbstractExtractor {\n    extract(): any {\n         let currentByte = 0;\n         for (let i = 0; i < 20; i++) {\n             this.scores.default.push({\n                 rank: i + 1,\n                 score: parseInt(this.hi!.buffer.readIntBE(currentByte, 4).toString(16)),\n                 name: this.hi!.slice(currentByte + 4, 4).toString(),\n                 // TODO : Extras, HIT, MEDALS\n             });\n             currentByte += 14;\n         }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'ddragon'\n})\nexport default class Ddragon extends AbstractExtractor {\n    protected charset = {\n        0x3B: '.',\n        0x3C: ' '\n    };\n\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.buffer.readIntBE(i * 6, 3).toString(16)),\n                name: this.hi!.slice(i * 6 + 3, 3).toString(this.charset, 32)\n            });\n        }\n    }\n}\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'galaga',\n    hi: true\n})\nexport default class Galaga extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i < 5; i++) {\n            this.output.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(currentByte, 6).trim(0x24).decodeBCDLE(),\n                name: ''\n            });\n            currentByte += 6;\n        }\n        for (let i = 0; i < 5; i++) {\n            this.output.default[i].name = this.hi!.slice(currentByte, 3).toString({}, 55);\n            currentByte += 3;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'invaddlx'\n})\nexport default class Invaddlx extends AbstractExtractor {\n    protected charset = {\n        0x1A: '.',\n        0x1B: ' '\n    };\n\n    extract(): any {\n        this.scores.default.push({\n            rank: 1,\n            score: parseInt(this.hi!.slice(0, 2).readIntLE().toString(16)) * 10,\n            name: this.hi!.slice(2, 10).toString(this.charset, 65)\n        });\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'mk',\n    hi: false,\n    nvram: 'nvram'\n})\nexport default class Mk extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 6144; // Skip first 6144 bytes\n        for (let i = 0; i < 15; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.nvram!.slice(currentByte, 6).byteSkip(true).toString({}, 65),\n                score: this.nvram!.slice(currentByte + 10, 8).byteSkip(true).readIntLE()\n            });\n            currentByte += 18;\n        }\n    }\n}\n","import extractors from './Extractors';\nimport {Output} from \"./interfaces\";\n\nexport default class MameHiExtractor {\n    protected dir!: string;\n\n    constructor(dir: string) {\n        this.dir = dir;\n    }\n\n    /**\n     * Return hiscores of a game\n     * @param romName\n     */\n    public get(romName: string): Output|undefined {\n        if (extractors[romName]) {\n            return extractors[romName].init(this.dir).scores;\n        }\n    }\n\n    /**\n     * Check if hiscore extractor for a game exist\n     * @param romName\n     */\n    public exist(romName: string) {\n        return !!extractors[romName];\n    }\n}\n","import Extractor1941 from \"./Extractor/1941\";\nimport Extractor1943 from \"./Extractor/1943\";\nimport Aburner from \"./Extractor/Aburner\";\nimport Altbeast from \"./Extractor/Altbeast\";\nimport Arkanoid from \"./Extractor/Arkanoid\";\nimport Asteroid from \"./Extractor/Asteroid\";\nimport Bombjack from \"./Extractor/Bombjack\";\nimport Snowbro2 from \"./Extractor/Snowbro2\";\nimport Kungfum from \"./Extractor/Kungfum\";\nimport Smashtv from \"./Extractor/Smashtv\";\nimport Spf2t from \"./Extractor/Spf2t\";\nimport Jumpbug from \"./Extractor/Jumpbug\";\nimport Mario from \"./Extractor/Mario\";\nimport Scontra from \"./Extractor/Scontra\";\nimport Chasehq from \"./Extractor/Chasehq\";\nimport Dkong from \"./Extractor/Dkong\";\nimport Ddragon from \"./Extractor/Ddragon\";\nimport Robocop from \"./Extractor/Robocop\";\nimport Ddsom from \"./Extractor/Ddsom\";\nimport Paperboy from \"./Extractor/Paperboy\";\nimport Sf2 from \"./Extractor/Sf2\";\nimport Toki from \"./Extractor/Toki\";\nimport Xmvsf from \"./Extractor/Xmvsf\";\nimport Starwars from \"./Extractor/Starwars\";\nimport Tetris from \"./Extractor/Tetris\";\nimport Gunsmoke from \"./Extractor/Gunsmoke\";\nimport Jackal from \"./Extractor/Jackal\";\nimport Marble from \"./Extractor/Marble\";\nimport Insectx from \"./Extractor/Insectx\";\nimport Mappy from \"./Extractor/Mappy\";\nimport Pang from \"./Extractor/Pang\";\nimport Popeye from \"./Extractor/Popeye\";\nimport Qbert from \"./Extractor/Qbert\";\nimport Rtype from \"./Extractor/Rtype\";\nimport Pengo from \"./Extractor/Pengo\";\nimport Galaga from \"./Extractor/Galaga\";\nimport Invaddlx from \"./Extractor/Invaddlx\";\nimport Tmnt from \"./Extractor/Tmnt\";\nimport Wboy from \"./Extractor/Wboy\";\nimport Mk from \"./Extractor/Mk\";\nimport Gng from \"./Extractor/Gng\";\nimport Centiped from \"./Extractor/Centiped\";\nimport Pacland from \"./Extractor/Pacland\";\nimport Bosco from \"./Extractor/Bosco\";\nimport Shinobi from \"./Extractor/Shinobi\";\nimport Robotron from \"./Extractor/Robotron\";\nimport Trackfld from \"./Extractor/Trackfld\";\nimport Tutankhm from \"./Extractor/Tutankhm\";\nimport Dangar from \"./Extractor/Dangar\";\nimport Dkong3 from \"./Extractor/Dkong3\";\nimport Digdug from \"./Extractor/Digdug\";\nimport Joust from \"./Extractor/Joust\";\nimport Mslug2 from \"./Extractor/Mslug2\";\nimport Btime from \"./Extractor/Btime\";\nimport Jack from \"./Extractor/Jack\";\nimport Suprmrio from \"./Extractor/Suprmrio\";\nimport Donpachi from \"./Extractor/Donpachi\";\nimport Hyperspt from \"./Extractor/Hyperspt\";\nimport Mwalk from \"./Extractor/Mwalk\";\nimport Xevious from \"./Extractor/Xevious\";\nimport Dkongjr from \"./Extractor/Dkongjr\";\nimport Columns from \"./Extractor/Columns\";\nimport Simpsons from \"./Extractor/Simpsons\";\nimport Punchout from \"./Extractor/Punchout\";\nimport Bublbobl from \"./Extractor/Bublbobl\";\nimport Defender from \"./Extractor/Defender\";\nimport Pacmania from \"./Extractor/Pacmania\";\nimport Spang from \"./Extractor/Spang\";\nimport Invadpt2 from \"./Extractor/Invadpt2\";\nimport AbstractExtractor from \"./AbstractExtractor\";\nimport Aburner2 from \"./Extractor/Aburner2\";\nimport Ddragon2 from \"./Extractor/Ddragon2\";\nimport Galagamk from \"./Extractor/Galagamk\";\nimport Hsf2 from \"./Extractor/Hsf2\";\nimport Mk2 from \"./Extractor/Mk2\";\nimport Mslug from \"./Extractor/Mslug\";\nimport Extractor88Games from \"./Extractor/88games\";\nimport Outrun from \"./Extractor/Outrun\";\nimport Outzone from \"./Extractor/Outzone\";\nimport Bouldash from \"./Extractor/Bouldash\";\nimport Snowbros from \"./Extractor/Snowbros\";\nimport Intrepid from \"./Extractor/Intrepid\";\n\nlet extractorsArray = [\n    new Extractor88Games(),\n    new Extractor1941(),\n    new Extractor1943(),\n    new Aburner(),\n    new Aburner2(),\n    new Altbeast(),\n    new Arkanoid(),\n    new Asteroid(),\n    new Bombjack(),\n    new Bosco(),\n    new Bouldash(),\n    new Btime(),\n    new Bublbobl(),\n    new Centiped(),\n    new Chasehq(),\n    new Columns(),\n    new Dangar(),\n    new Ddragon(),\n    new Ddragon2(),\n    new Ddsom(),\n    new Defender(),\n    new Digdug(),\n    new Dkong(),\n    new Dkong3(),\n    new Dkongjr(),\n    new Donpachi(),\n    new Galaga(),\n    new Galagamk(),\n    new Gng(),\n    new Gunsmoke(),\n    new Hsf2(),\n    new Hyperspt(),\n    new Insectx(),\n    new Intrepid(),\n    new Invaddlx(),\n    new Invadpt2(),\n    new Jack(),\n    new Jackal(),\n    new Joust(),\n    new Jumpbug(),\n    new Kungfum(),\n    new Mappy(),\n    new Marble(),\n    new Mario(),\n    new Mk(),\n    new Mk2(),\n    new Mslug(),\n    new Mslug2(),\n    new Mwalk(),\n    new Outrun(),\n    new Outzone(),\n    new Pacland(),\n    new Pacmania(),\n    new Pang(),\n    new Paperboy(),\n    new Pengo(),\n    new Popeye(),\n    new Punchout(),\n    new Qbert(),\n    new Robocop(),\n    new Robotron(),\n    new Rtype(),\n    new Scontra(),\n    new Sf2(),\n    new Shinobi(),\n    new Simpsons(),\n    new Smashtv(),\n    new Snowbro2(),\n    new Snowbros(),\n    new Spang(),\n    new Spf2t(),\n    new Starwars(),\n    new Suprmrio(),\n    new Tetris(),\n    new Tmnt(),\n    new Toki(),\n    new Trackfld(),\n    new Tutankhm(),\n    new Wboy(),\n    new Xevious(),\n    new Xmvsf(),\n];\n\nlet extractors: {[key: string]: AbstractExtractor} = {};\nfor (let extractor of extractorsArray) {\n    extractors[extractor.name] = extractor;\n}\nextractorsArray = [];\nexport default extractors;\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: '1941',\n    hi: true\n})\nexport default class Extractor1941 extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 40;\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.buffer.readIntBE(currentByte, 4).toString(16)),\n                name: this.hi!.slice(currentByte + 4, 3).toString(),\n                // TODO : Extras data like GRADE\n            });\n            currentByte += 8;\n        }\n    }\n}\n","module.exports = require(\"fs\");","export default class MHEBuffer {\n    public buffer: Buffer;\n\n    constructor(file: Buffer) {\n        this.buffer = Buffer.from(file);\n    }\n\n    public slice(begin?: number, size?: number) {\n        return new MHEBuffer(this.buffer.slice(begin, size ? begin! + size : size));\n    }\n\n    public trim(trimNeedle: number): MHEBuffer {\n        let i = 0;\n        for (let buf of this.buffer) {\n            if (buf === trimNeedle) {\n                i++;\n            } else {\n                break;\n            }\n        }\n        this.buffer = this.buffer.slice(i, this.buffer.byteLength - i);\n        return this;\n    }\n\n    public decodeBase40(): string {\n        let originValue = this.buffer.readIntBE(0, this.buffer.byteLength);\n        const ctable = [\n            ['\\0', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ' ', '\\n'],\n            ['\\0', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '(', '!', '@', '#', ',', '.', '?', '/', '*', ')', '<', '>']\n        ];\n        let shiftState = 0;\n        let result = '';\n        let tmp = Math.round(originValue/ 1600);\n        if (tmp === 39) {\n            shiftState = 1;\n        } else {\n            result += ctable[shiftState][tmp];\n        }\n        tmp = Math.round((originValue - tmp * 1600) / 40);\n        if (tmp === 39) {\n            shiftState = 1;\n        } else {\n            result += ctable[shiftState][tmp];\n            shiftState = 0;\n        }\n        tmp = Math.round(originValue % 40);\n        result += (tmp !== 39) ? ctable[shiftState][tmp] : '';\n        return result;\n    }\n\n    public decodeBase32(): string {\n        const ctable = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '2', '3', '4', '5', '6', '7'];\n        let result = '';\n        let len = Math.floor(this.buffer.byteLength * 8 / 5);\n        let buffer = this.buffer.readIntBE(0, this.buffer.byteLength);\n        while (len) {\n            const charId = (buffer & 31) - 1;\n            result = (ctable[charId] ? ctable[charId] : ' ') + result;\n            buffer = buffer >> 5;\n            len--;\n        }\n        return result;\n    }\n\n    /**\n     * Decode a BCD buffer in Big Endian\n     */\n    public decodeBCD(): number {\n        let result = .0;\n        for (let buf of this.buffer) {\n            result = result * 10 + (buf & 0x0F);\n        }\n        return result;\n    }\n\n    /**\n     * Decode a BCD in Little Endian\n     */\n    public decodeBCDLE(): number {\n        let result = .0;\n        for (let i = this.buffer.byteLength; i >= 0; --i) {\n            result = result * 10 + (this.buffer[i] & 0x0F);\n        }\n        return result;\n    }\n\n    /**\n     * Skip even or odd bytes\n     * @param even\n     */\n    public byteSkip(even: boolean) {\n        let buffer = [];\n        for (let i = 0; i < this.buffer.length; i++) {\n            if ((!even && i % 2) || (even && i % 2 === 0)) {\n                buffer.push(this.buffer[i]);\n            }\n        }\n        return new MHEBuffer(Buffer.from(buffer));\n    }\n\n    public nibbleSkip(even = false) {\n        let buffer = [];\n        let tmp = 0;\n        const isEven = this.buffer.length % 2 === 0;\n        for (let i = 0; i < this.buffer.length; i++) {\n            if (isEven && (i + 1) % 2 !== 0 ) {\n                tmp = this.buffer[i] & (even ? 0xF0 : 0x0F);\n            } else if (!isEven && (i + 1) % 2 === 0 && i !== 0) {\n                tmp = this.buffer[i] & (even ? 0xF0 : 0x0F);\n            } else {\n                tmp = tmp << 4;\n                tmp ^= this.buffer[i] & (even ? 0xF0 : 0x0F);\n                buffer.push(tmp);\n            }\n        }\n        return new MHEBuffer(Buffer.from(buffer));\n    }\n\n    public byteMap(fn: (byte: number) => number) {\n        this.buffer = Buffer.from(this.buffer.map(fn));\n        return this;\n    }\n\n    public readIntBE() {\n        return this.buffer.readIntBE(0, this.buffer.byteLength);\n    }\n\n    public readIntLE() {\n        return this.buffer.readIntLE(0, this.buffer.byteLength);\n    }\n\n    public toStringLE(charset?: {[key:number]: string}, offset = 0) {\n        let newBuffer = [];\n        for (let i = this.buffer.byteLength - 1; i >= 0; i--) {\n            newBuffer.push(this.buffer.readUIntLE(i, 1));\n        }\n        this.buffer = Buffer.from(newBuffer);\n        return this.toString(charset, offset);\n    }\n\n    /**\n     * Return the buffer hexa as a number\n     * Example : Buffer = 0x0872 => return 872\n     * @param rtl right-to-left, reverse te returned value, ex: Buffer = 0x0872 => return 2780\n     */\n    public toHexNumber(rtl = false) {\n        let str = this.buffer.toString('hex');\n        if (rtl) {\n            str = str.split('').reverse().join('')\n        }\n        return parseInt(str);\n    }\n\n    /**\n     * Swap x number of byte\n     * Example: swap = 2, buffer = 0xF0E1 => return 0xE1F0\n     * Example: swap = 4, buffer = 0xF0E1D2C3 => return 0xC3D2E1F0\n     * @param swap\n     */\n    public byteSwap(swap: number) {\n        let ret: number[] = [];\n        for (let i = 0; i < this.buffer.length; i += swap) {\n            let tmp = this.slice(i, swap);\n            for (let y = tmp.buffer.length - 1; y >= 0; y--) {\n                ret.push(tmp.buffer[y])\n            }\n        }\n        this.buffer = Buffer.from(ret);\n        return this;\n    }\n\n    /**\n     * Remove unwanted bytes\n     * Example: buffer = 0x52502424, filteredBytes = 0x24 => return 0x5250\n     * @param filteredBytes\n     */\n    public byteFilter(filteredBytes: number|number[]) {\n        let result: number[] = [];\n        if (!Array.isArray(filteredBytes)) {\n            filteredBytes = [filteredBytes];\n        }\n        for (let byte of this.buffer) {\n            if (filteredBytes.indexOf(byte) < 0) {\n                result.push(byte);\n            }\n        }\n        this.buffer = Buffer.from(result);\n        return this;\n    }\n\n    /**\n     * Buffer to string where a char is on 1 byte (8 bits)\n     * @param charset\n     * @param offset\n     */\n    public toString(charset?: {[key:number]: string}, offset?: number) {\n        offset = offset || 0;\n        if (charset && Object.entries(charset).length) {\n            let newBuffer = [];\n            for (const buf of this.buffer) {\n                newBuffer.push(charset[buf] ? charset[buf].charCodeAt(0) : (buf + offset));\n            }\n            this.buffer = Buffer.from(newBuffer);\n        } else if (offset) {\n            let newBuffer = [];\n            for (const buf of this.buffer) {\n                let i = newBuffer.push(buf + offset);\n            }\n            this.buffer = Buffer.from(newBuffer);\n        }\n        return this.buffer.toString();\n    }\n\n    /**\n     * Buffer to string where a char is on 2 bytes (16 bits)\n     * @param charset\n     * @param offset\n     */\n    public toString16(charset?: {[key: number]: string}, offset?: number) {\n        offset = offset || 0;\n        if (charset && Object.entries(charset).length) {\n            let newBuffer = [];\n            for (let i = 0; i < this.buffer.byteLength; i += 2) {\n                const uint16 = this.slice(i, 2).buffer.readUInt16BE(0);\n                newBuffer.push(charset[uint16] ? charset[uint16].charCodeAt(0) : (uint16 + offset));\n            }\n            this.buffer = Buffer.from(newBuffer);\n        } else if (offset) {\n            let newBuffer = [];\n            for (let i = 0; i < this.buffer.byteLength; i += 2) {\n                const uint16 = this.slice(i, 2).buffer.readUInt16BE(0);\n                newBuffer.push(uint16 + offset);\n            }\n            this.buffer = Buffer.from(newBuffer);\n        }\n        return this.buffer.toString();\n    }\n\n    /**\n     * Filter byte from a mask\n     * Ex: Buffer = 0x05FF5B, mask = \"FF00FF\" => output = 0x055B\n     * @param mask\n     */\n    public byteMask(mask: string) {\n        const maskBuffer = Buffer.from(mask, 'hex');\n        let result = [];\n        for (let i = 0; i < this.buffer.byteLength; i++) {\n            if (maskBuffer[i] === 0) continue;\n            result.push(this.buffer[i]);\n        }\n        this.buffer = Buffer.from(result);\n        return this;\n    }\n}\n","module.exports = require(\"path\");","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: '1943',\n})\nexport default class Extractor1943 extends AbstractExtractor {\n    protected charset = {\n        0x24: ' ',\n        0x2B: '.',\n        0x2C: ':',\n        0x3A: '&',\n        0x62: '&black-heart;',\n        0x64: '&black-star;', // TODO : Special char\n        0x66: '!'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 6; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(i * 16, 8).decodeBCD(),\n                name: this.hi!.slice(i * 16 + 8, 3).toString(this.charset, 55)\n            })\n        }\n    }\n}\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'altbeast',\n    hi: true\n})\nexport default class Altbeast extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i < 7; i++) {\n            this.scores.default.push({\n                rank: i,\n                score: parseInt(this.hi!.buffer.readIntBE(currentByte, 4).toString(16)),\n                name: this.hi!.slice(currentByte + 5, 3).toString(),\n                // TODO : Extras data stage\n            });\n            currentByte += 8;\n        }\n    }\n}\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'arkanoid',\n    hi: true\n})\nexport default class Arkanoid extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.buffer.readIntBE(currentByte, 3).toString(16)) * 10,\n                name: this.hi!.slice(currentByte + 4, 3).toString()\n            });\n            currentByte += 7;\n        }\n    }\n}\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'asteroid',\n    hi: true\n})\nexport default class Asteroid extends AbstractExtractor {\n    extract(): any {\n        let currentBytes = 0;\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.buffer.readIntLE(currentBytes, 2).toString(16)) * 10,\n                name: '',\n            });\n            currentBytes += 2;\n        }\n        currentBytes += 3; //Separator\n        for (let i = 0; i < 10; i++) {\n            this.scores.default[i].name = this.hi!.slice(currentBytes, 3).toString({}, 54);\n            currentBytes += 3;\n        }\n    }\n}\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'bombjack',\n    hi: true\n})\nexport default class Bombjack extends AbstractExtractor {\n    protected charset = {\n        0x00: ' ',\n        0x2E: '.',\n    };\n\n    extract(): any {\n        let currentByte = 16;\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.buffer.readIntLE(currentByte, 4).toString(16)),\n                name: ''\n            });\n            currentByte += 4;\n        }\n        // TODO : Extras - Stage\n        currentByte += 10;\n        for (let i = 0; i < 10; i++) {\n            currentByte += 2; // Skip RANK\n            this.scores.default[i].name = this.hi!.slice(currentByte, 6).byteSkip(true).toString(this.charset);\n            currentByte += 8;\n        }\n    }\n}\n","import Extractor from \"../Decorator/Extractor\";\nimport AbstractExtractor from \"../AbstractExtractor\";\n\n@Extractor({\n    name: 'snowbro2'\n})\nexport default class Snowbro2 extends AbstractExtractor {\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 4, 4).readIntBE().toString(16)),\n                name: this.hi!.slice(i * 4 + 20 + 1, 3).toString()\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'kungfum'\n})\nexport default class Kungfum extends AbstractExtractor {\n    protected charset = {\n        0x20: ' ',\n        0x2E: '.',\n        0x5B: '.'\n    };\n\n    extract(): any {\n        for (let i = 19; i >= 0; i--) {\n            this.scores.default.push({\n                rank: Math.abs(i - 20),\n                score: parseInt(this.hi!.slice(i * 6, 3).readIntBE().toString(16)) * 10,\n                name: this.hi!.slice(i * 6 + 3, 3).toString(this.charset)\n            })\n        }\n\n    }\n}\n","import Extractor from \"../Decorator/Extractor\";\nimport AbstractExtractor from \"../AbstractExtractor\";\n\n@Extractor({\n    name: 'smashtv',\n    hi: false,\n    nvram: 'nvram'\n})\nexport default class Smashtv extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 16400;\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.nvram!.slice(currentByte, 8).byteSkip(true).readIntBE().toString(16)),\n                name: this.nvram!.slice(currentByte + 8, 6).byteSkip(true).toString()\n            });\n            currentByte += 16;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'spf2t'\n})\nexport default class Spf2t extends AbstractExtractor {\n    protected charset = {\n        0x1A: '0',\n        0x1B: '1',\n        0x1C: '2',\n        0x1D: '3',\n        0x1E: '4',\n        0x1F: '5',\n        0x20: '6',\n        0x21: '7',\n        0x22: '8',\n        0x23: '9',\n        0x24: '!',\n        0x25: '?',\n        0x26: '.',\n        0x27: '-',\n        0x28: ',',\n        0x29: '&black-heart;', // TODO : Special char\n        0x2A: '&left-arrow;',\n        0x2B: '&',\n        0x2C: '=',\n        0x2D: ' ',\n    };\n\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(i * 16, 4).readIntBE(),\n                name: this.hi!.slice(i * 16 + 4, 3).toString(this.charset, 65)\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\nimport {log} from \"util\";\nimport MHEBuffer from \"../MHEBuffer\";\n\n@Extractor({\n    name: 'jumpbug'\n})\nexport default class Jumpbug extends AbstractExtractor {\n    extract(): any {\n        // Get only names\n        for (let i = 0; i < 3; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: 0,\n                name: this.hi!.slice(12 + i * 3, 3).toStringLE({},-63)\n            });\n        }\n\n        this.scores.default[0].score = this.getScore(21);\n        this.scores.default[1].score = this.getScore(0);\n        this.scores.default[2].score = this.getScore(6);\n    }\n\n    /**\n     * Weird \"low-endian\" original buffer after nibble skip loop like \"00 65 03\", so you have to read left ro right but reverse nibbles\n     * @param startByte\n     * @TODO : Maybe make it global, or use a function to swap nibbles\n     */\n    protected getScore(startByte: number): number {\n        let ret = '';\n        let buf = this.hi!.slice(startByte, 6).nibbleSkip(false);\n        for (let i = buf.buffer.byteLength - 1; i >= 0; i--) {\n            let byte = buf.buffer.readUIntLE(i, 1);\n            ret += (byte & 0x0F).toString(16) + (byte >> 4).toString(16);\n        }\n        return parseInt(ret);\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'mario'\n})\nexport default class Mario extends AbstractExtractor {\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 34 + 7, 6).nibbleSkip(false).readIntBE().toString(16)),\n                name: this.hi!.slice(i * 34 + 15, 3).toString({}, 48)\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'scontra'\n})\nexport default class Scontra extends AbstractExtractor {\n    protected charset = {\n        0x0B: ',',\n        0x0C: '-',\n        0x0D: '.',\n        0x0E: '?',\n        0x0F: '!',\n        0x10: ' ',\n    };\n\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.hi!.slice(i * 8, 3).toString(this.charset, 48),\n                score: parseInt(this.hi!.slice(i * 8 + 4, 4).readIntBE().toString(16))\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'chasehq'\n})\nexport default class Chasehq extends AbstractExtractor {\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            let byte = i * 16 + 6; // Each line is 16 bytes, skip 6 first bytes because it's useless\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.buffer.readIntBE(byte, 4).toString(16)),\n                name: this.hi!.slice(byte + 6, 3).toString()\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'dkong'\n})\nexport default class Dkong extends AbstractExtractor {\n    protected charset = {\n        0x10: ' ',\n        0x2B: '.',\n        0x2C: '-'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.buffer.readIntLE(34 * i + 29, 3).toString(16)),\n                name: this.hi!.slice(34 * i + 15, 3).toString(this.charset, 48)\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n// TODO : Not tested\n@Extractor({\n    name: 'robocop'\n})\nexport default class Robocop extends AbstractExtractor {\n    protected charset  = {\n        0x00: ''\n    };\n\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.hi!.slice(i * 16, 8).toString(this.charset),\n                score: parseInt(this.hi!.slice(i * 16 + 8, 4).readIntBE().toString(16))\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'ddsom'\n})\nexport default class Ddsom extends AbstractExtractor {\n    protected charset = {\n        0x6C: '&',\n        0x6D: '!',\n        0x6E: '?',\n        0x6F: '-',\n        0x72: '&roman-numeral-1;',\n        0x73: '&roman-numeral-2;',\n        0x74: '&roman-numeral-3;',\n        0x77: '0',\n        0x78: '1',\n        0x79: '2',\n        0x7A: '3',\n        0x7B: '3',\n        0x7C: '3',\n        0x7D: '3',\n        0x7E: '3',\n        0x7F: '3',\n        0x80: '9',\n        0x81: ' ',\n        0xFF: '',\n    }\n\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.hi!.slice(i * 14 + 2, 6).toString(this.charset, -16),\n                score: parseInt(this.hi!.buffer.readIntBE(i * 14 + 8, 4).toString(16))\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n// TODO : Not tested\n@Extractor({\n    name: 'paperboy',\n    hi: false,\n    nvram: 'eeprom'\n})\nexport default class Paperboy extends AbstractExtractor {\n    protected charset = {\n        0x20: ' '\n    };\n\n    extract(): any {\n        let currentByte = 66;\n        for (let i = 0; i < 30; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: this.nvram!.slice(currentByte, 3).readIntBE(),\n                name: this.nvram!.slice(currentByte + 3, 3).toString(this.charset)\n            });\n            currentByte += 6;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'sf2'\n})\nexport default class Sf2 extends AbstractExtractor {\n    protected charset = {\n        0x20: ' ',\n        0x2E: '.'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 6; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 8, 4).readIntBE().toString(16)),\n                name: this.hi!.slice(i * 8 + 4, 3).toString(this.charset)\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'toki'\n})\nexport default class Toki extends AbstractExtractor {\n    protected charset = {\n        0x00: ' ',\n        0x20: ' ',\n        0x5B: '[',\n        0x5C: '\\\\',\n        0x5D: ']'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 20; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 4, 4).readIntBE().toString(16)),\n                name: this.hi!.slice(80 + i * 4 + 1, 3).toString(this.charset)\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'xmvsf'\n})\nexport default class Xmvsf extends AbstractExtractor {\n    protected charset = {\n        0x1A: '0',\n        0x1B: '1',\n        0x1C: '2',\n        0x1D: '3',\n        0x1E: '4',\n        0x1F: '5',\n        0x20: '6',\n        0x21: '7',\n        0x22: '8',\n        0x23: '9',\n        0x24: '!',\n        0x25: '&',\n        0x26: '-',\n        0x27: '.',\n        0x28: '/',\n        0x29: '&black-heart;', // TODO : Special char\n        0x2A: '?',\n        0x2B: ' ',\n    };\n\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 10, 4).readIntBE().toString(16)),\n                name: this.hi!.slice(i * 10 + 6, 3).toString(this.charset, 65)\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'starwars',\n    hi: false,\n    nvram: 'x2212'\n})\nexport default class Starwars extends AbstractExtractor {\n    protected charset = {\n        0x00: ' '\n    };\n\n    extract(): any {\n        for (let i = 0; i < 3; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.nvram!.slice(8 + i * 8, 8).nibbleSkip().readIntBE().toString(16)),\n                name: this.nvram!.slice(32 + i * 6, 6).nibbleSkip().toString(this.charset, 64)\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'tetris'\n})\nexport default class Tetris extends AbstractExtractor {\n    protected charset = {\n        0x00: ' ',\n        0x5E: '@'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.hi!.slice(i * 10, 3).toString(this.charset),\n                score: this.hi!.slice(i * 10 + 4, 4).readIntBE()\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'gunsmoke'\n})\nexport default class Gunsmoke extends AbstractExtractor {\n    protected charset = {\n        0x00: '0',\n        0x01: '1',\n        0x02: '2',\n        0x03: '3',\n        0x04: '4',\n        0x05: '5',\n        0x06: '6',\n        0x07: '7',\n        0x08: '8',\n        0x09: '9',\n        0x24: ' ',\n        0x2E: '*',\n        0x2F: '#',\n        0x34: '&man;',\n        0x35: '&woman;',\n        0x3E: '&phone;',\n        0x40: '&man;',\n        0x41: '&woman;',\n        0x43: '&amber;',\n        0x45: '&boat;',\n        0x48: '&single-music-note;',\n        0x49: '&double-music-note;',\n        0x4a: '&car-side;',\n        0x4e: '&car-front;',\n        0x5b: '&dot-in-square;',\n        0x60: '&black-diamond;',\n        0x61: '&black-spade;',\n        0x62: '&heart;',\n        0x63: '&black-heart;',\n        0x64: '&star;',\n        0x65: '&black-star;',\n        0x68: '?',\n    };\n\n    extract(): any {\n        let currentBytes = 0;\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(currentBytes + 1, 7).nibbleSkip(false).readIntBE().toString(16)) * 10,\n                name: this.hi!.slice(currentBytes + 10, 6).byteSkip(false).toString(this.charset, 55)\n            });\n            currentBytes += 16;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'jackal'\n})\nexport default class Jackal extends AbstractExtractor {\n    protected charset = {\n        0x0C: '-',\n        0x0D: '.',\n        0x0E: ':',\n        0x0F: '!',\n        0x10: ' '\n    };\n\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 8, 4).readIntBE().toString(16)),\n                name:this.hi!.slice(i * 8 + 4, 3).toString(this.charset, 48)\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'marble',\n    hi: true,\n})\nexport default class Marble extends AbstractExtractor {\n    extract(): any {\n        let rank = 1;\n        for (let i = 0; i < this.hi!.buffer.length; i += 5) {\n            this.output.default.push({\n                rank: rank++,\n                score: this.hi!.buffer.readIntBE(i, 3),\n                name: this.hi!.slice(i + 3, 2).decodeBase40()\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'insectx'\n})\nexport default class Insectx extends AbstractExtractor {\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 8, 3).readIntBE().toString(16)) * 100,\n                name: this.hi!.slice(i * 8 + 4, 3).toString()\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'mappy'\n})\nexport default class Mappy extends AbstractExtractor {\n    protected charset = {\n        0x5F: '.'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 8, 3).readIntBE().toString(16)) * 10,\n                name: this.hi!.slice(i * 8 + 5, 3).toString(this.charset)\n                // TODO : Extras\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'pang'\n})\nexport default class Pang extends AbstractExtractor {\n    protected charset = {\n        0x7B: '&mid-dot;'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 9; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 16, 3).readIntBE().toString(16)) * 10,\n                name: this.hi!.slice(i * 16 + 3, 3).toString(this.charset)\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'popeye'\n})\nexport default class Popeye extends AbstractExtractor {\n    protected charset = {\n        0x24: '/',\n        0x25: ',',\n        0x26: '.',\n        0x27: '*',\n        0x28: '&four-lines;',\n        0x29: ' ',\n    };\n\n    extract(): any {\n        let currentByte = 1;\n        let positions: number[] = [];\n\n        for (let i = 0; i < 5; i++) {\n            positions.push((this.hi!.slice(currentByte, 1).buffer.readUInt8(0) - 11) / 6);\n            currentByte += 1;\n        }\n\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: positions[i] + 1,\n                name: this.hi!.slice(currentByte, 3).toString(this.charset, 55),\n                score: parseInt(this.hi!.slice(currentByte + 3, 3).readIntLE().toString(16))\n            });\n            currentByte += 6;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'qbert',\n    hi: false,\n    nvram: 'nvram'\n})\nexport default class Qbert extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 2562;\n        for (let i = 22; i >= 0; i--) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.nvram!.slice(currentByte, 3).toString({}, 55),\n                score: this.nvram!.slice(currentByte + 3, 7).byteFilter(0x24).nibbleSkip().toHexNumber()\n            });\n            currentByte += 10;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n// TODO : Not tested\n@Extractor({\n    name: 'rtype'\n})\nexport default class Rtype extends AbstractExtractor {\n    protected charset = {\n        0x20: ' ',\n        0x21: '!',\n        0x2C: ',',\n        0x2E: '.',\n        0x3E: '&gt;',\n        0x3F: '?',\n    };\n\n    extract(): any {\n        let currentByte = 4;\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(currentByte, 3).byteSwap(2).readIntBE().toString(16)), // TODO : byteSwap will not work with an odd number of bytes\n                name: this.hi!.slice(currentByte + 3, 7).toString(this.charset)\n            });\n            currentByte += 11;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n// TODO : Not tested\n@Extractor({\n    name: 'pengo'\n})\nexport default class Pengo extends AbstractExtractor {\n    protected charset = {\n        0x5B: '.'\n    };\n\n    extract(): any {\n        for (let i = 4; i >= 0; i--) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(i * 6, 2).readIntLE() * 10,\n                name: this.hi!.slice(i * 6 + 3, 3).toString(this.charset)\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'tmnt'\n})\nexport default class Tmnt extends AbstractExtractor {\n    protected charset = {\n        0x40: ' ',\n        0x5B: ',',\n        0x5C: '\\\\',\n        0x5D: '?',\n        0x5E: '!',\n        0x5F: '.',\n    };\n\n    extract(): any {\n        for (let i = 0; i < 11; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 2, 2).readIntBE().toString(16)),\n                name: this.hi!.slice(200 + i * 4, 3).toString(this.charset)\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'wboy'\n})\nexport default class Wboy extends AbstractExtractor {\n    protected charset = {\n        0x5C: '&ring;',\n        0x5E: '&kiss;',\n        0x7D: '&woman;',\n        0x7E: '&man;',\n        0x7F: '&black-heart', // TODO : Special char\n    };\n\n    extract(): any {\n        for (let i = 0; i < 20; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 16 + 2, 6).byteFilter(0x20).nibbleSkip().readIntBE().toString(16)) * 10,\n                name: this.hi!.slice(i * 16 + 8, 3).toString(this.charset)\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'gng'\n})\nexport default class Gng extends AbstractExtractor {\n    protected charset = {\n        0x1D: '.'\n    };\n\n    extract(): any {\n        let positions: number[] = [];\n\n        for (let i = 0; i < 10; i++) {\n            let buf = this.hi!.slice(i * 2, 2).byteSkip(false).buffer.readUInt8(0);\n            positions.push((buf - 44) / 7)\n        }\n\n        let currentByte = 20;\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: positions[i] ? positions[i] : 10,\n                score: parseInt(this.hi!.buffer.readIntBE(currentByte, 4).toString(16)),\n                name: this.hi!.slice(currentByte + 4, 3).toString(this.charset)\n            });\n            currentByte += 7;\n        }\n        this.scores.default.sort((a, b) => {\n            if (a.rank < b.rank) {\n                return -1;\n            } else if (a.rank > b.rank) {\n                return 1;\n            }\n            return 0;\n        })\n    }\n}\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'centiped',\n    hi: true,\n    nvram: 'earom',\n})\nexport default class Centiped extends AbstractExtractor {\n    extract() {\n        this.extractNvram();\n        this.extractHi();\n    }\n\n    protected extractNvram() {\n        for (let i = 0; i < 3; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.nvram!.buffer.readIntLE(i * 3, 3).toString(16)),\n                name: this.nvram!.slice(i * 3 + 9, 3).toString({}, 64)\n            });\n        }\n    }\n\n    protected extractHi() {\n        let currentBytes = 0;\n        const startRank = this.scores.default.length;\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1 + startRank,\n                score: parseInt(this.hi!.buffer.readIntLE(i * 3, 3).toString(16)),\n                name: this.hi!.slice(i * 3 + 15, 3).toString({}, 64),\n            });\n            currentBytes += 3;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n// TODO : Not tested\n@Extractor({\n    name: 'pacland'\n})\nexport default class Pacland extends AbstractExtractor {\n    protected charset = {\n        0xE4: '&crescent-moon;', // TODO : Special char\n        0xE5: '&headset;',\n        0xE6: '.',\n        0xE7: ' '\n    };\n\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 16, 4).readIntBE().toString(16)),\n                name: this.hi!.slice(i * 16 + 5, 5).toString(this.charset)\n            });\n        }\n    }\n}\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'bosco',\n    hi: true\n})\nexport default class Bosco extends AbstractExtractor {\n    protected charset = {\n        0x34: '.',\n        0x24: ' '\n    };\n\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.hi!.slice(currentByte, 3).toString(this.charset, 55),\n                score: 0,\n            });\n            currentByte += 3;\n        }\n        for (let i = 0; i < 5; i++) {\n            this.scores.default[i].score = parseInt(this.hi!.buffer.readIntBE(currentByte, 4).toString(16));\n            currentByte += 4;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'shinobi'\n})\nexport default class Shinobi extends AbstractExtractor {\n    protected charset = {\n        0x22: '.',\n        0x23: '\\'',\n        0x25: '/',\n        0x26: '(',\n        0x27: ')',\n        0x28: '-',\n        0x29: '&man;',\n        0x2A: '&woman;',\n        0x2B: '&mid-dot;',\n        0x2E: '=',\n    };\n\n    extract(): any {\n        for (let i = 0; i < 20; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 8, 4).readIntBE().toString(16)),\n                name: this.hi!.slice(i * 8 + 5, 3).toString(this.charset)\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'robotron',\n    hi: false,\n    nvram: 'nvram'\n})\nexport default class Robotron extends AbstractExtractor {\n    protected charset = {\n        0x3A: ' '\n    };\n\n    extract(): any {\n        let currentByte = 306;\n\n        this.scores.default.push({\n            rank: 1,\n            name: this.nvram!.slice(currentByte, 6).nibbleSkip().toString(this.charset),\n            score: parseInt(this.nvram!.slice(currentByte + 47, 7).nibbleSkip().readIntBE().toString(16))\n        });\n        currentByte += 54;\n\n        for (let i = 0; i < 37; i++) {\n            this.scores.default.push({\n                rank: i + 2,\n                name: this.nvram!.slice(currentByte, 6).nibbleSkip().toString(this.charset),\n                score: parseInt(this.nvram!.slice(currentByte + 7, 7).nibbleSkip().readIntBE().toString(16))\n            });\n            currentByte += 14;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'trackfld',\n    hi: false,\n    nvram: 'nvram'\n})\nexport default class Trackfld extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 1024; // Jump first 1024 Bytes\n\n        let extraIds = [\n            'run',\n            'longJump',\n            'javelin',\n            'hurdles',\n            'hammer',\n            'highJump'\n        ];\n\n        this.output.extras = {};\n        for (const extra of extraIds) {\n            this.output.extras[extra] = [];\n            for (let i = 0; i < 4; i++) { // All extras hiscores are by group of 4\n                this.output.extras[extra].push({\n                    rank: i + 1,\n                    score: this.nvram!.slice(currentByte,4).decodeBCD() / 100,\n                    name: this.nvram!.slice(currentByte + 4, 3).toString({}, 48),\n                    scoreSuffix: ['run', 'hurdles'].indexOf(extra) >= 0 ? 'sec' : 'm'\n                });\n                currentByte += 8;\n            }\n        }\n\n        for (let i = 0; i < 160; i++) { // Next 160 groups of 5 bytes are default scores\n            this.output.default.push({\n                rank: i + 1,\n                score: Number.parseInt(this.nvram!.buffer.readIntBE(currentByte, 3).toString(16)) * 10,\n                name: this.nvram!.slice(currentByte + 3, 2).decodeBase32()\n            });\n            currentByte += 5;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n// TODO : Not tested\n@Extractor({\n    name: 'tutankhm'\n})\nexport default class Tutankhm extends AbstractExtractor {\n    extract(): any {\n        for (let i = 0; i < 7; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 6, 3).readIntBE().toString(16)),\n                name: this.hi!.slice(i * 6 + 3, 3).toString()\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'dangar'\n})\nexport default class Dangar extends AbstractExtractor {\n    protected charset = {\n        0x20: ' ',\n        0x2E: '.'\n    };\n\n    /**\n     * Scores are reversed, latest to first, so we doing the loop in reverse\n     */\n    extract(): any {\n        let currentByte = 130;\n        for (let i = 10; i > 0; i--) {\n            this.scores.default.push({\n                rank: Math.abs(i - 11),\n                score: parseInt(this.hi!.buffer.readIntBE(currentByte - 13, 3).toString(16)) * 100,\n                name: this.hi!.slice(currentByte - 10, 3).toString(this.charset),\n            });\n            currentByte -= 13;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'dkong3'\n})\nexport default class Dkong3 extends AbstractExtractor {\n    protected charset = {\n        0x40: ' ',\n        0x5F: '-',\n        0x66: '.'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 7; i++){\n            const score = parseInt(this.hi!.buffer.readIntLE(34 * i + 29, 3).toString(16));\n            if (!score) {\n                continue;\n            }\n            const name = this.hi!.slice(34 * i + 15, 3).toString(this.charset);\n\n            this.scores.default.push({\n                rank: i + 1,\n                score: score,\n                name: name,\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'digdug',\n    hi: false,\n    nvram: 'earom'\n})\nexport default class Digdug extends AbstractExtractor {\n    protected charset = {\n        0x35: '.',\n        0x37: ' '\n    };\n\n    /**\n     * Score are from last to first, reverse loop\n     */\n    extract(): any {\n        for (let i = 5; i > 0; i--) {\n            let nameByte = 16 + (i - 1)  * 3;\n            this.scores.default.push({\n                rank: i,\n                score: parseInt(this.nvram!.buffer.readIntBE((i - 1) * 3, 3).toString(16)),\n                name: this.nvram!.slice(nameByte, 3).toString(this.charset, 39)\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'joust',\n    hi: false,\n    nvram: 'nvram'\n})\nexport default class Joust extends AbstractExtractor {\n    protected charset = {\n        0x0A: ' ',\n        0x32: ':'\n    };\n\n    extract(): any {\n        // Use only nvram, because hi is a duplicate of extra score 'Daily'\n\n        let currentByte = 318; // Skip debug values\n        this.output.default.push({\n            rank: 1,\n            name: this.nvram!.slice(currentByte, 40).nibbleSkip(false).toString(this.charset, 54),\n            score: parseInt(this.nvram!.slice(currentByte + 47, 7).nibbleSkip(false).readIntBE().toString(16))\n        });\n        currentByte += 54;\n        for (let i = 0; i < 40; i++) {\n            this.output.default.push({\n                rank: i + 2,\n                name: this.nvram!.slice(currentByte, 6).nibbleSkip(false).toString(this.charset, 54),\n                score: parseInt(this.nvram!.slice(currentByte + 7, 7).nibbleSkip(false).readIntBE().toString(16))\n            });\n            currentByte += 14;\n        }\n\n        this.scores.extras = {daily: []};\n        for (let i = 0; i < 6; i++) {\n            this.scores.extras.daily.push({\n                rank: i + 1,\n                name: this.nvram!.slice(currentByte, 6).nibbleSkip(false).toString(this.charset, 54),\n                score: parseInt(this.nvram!.slice(currentByte + 7, 7).nibbleSkip(false).readIntBE().toString(16))\n            });\n            currentByte += 14\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'mslug2'\n})\nexport default class Mslug2 extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(currentByte, 4).readIntBE().toString(16)),\n                name: this.hi!.slice(currentByte + 4, 3).toString()\n            });\n            currentByte += 10;\n        }\n\n    }\n}\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'btime',\n    hi: true\n})\nexport default class Btime extends AbstractExtractor {\n    protected charset = {\n        0x00: ' ',\n        0xCC: '-',\n        0xCD: ',',\n        0xCE: '?',\n        0xCF: '!',\n    };\n\n    extract() {\n        let currentByte = 3; // Skip TOP SCORE\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.buffer.readIntLE(currentByte, 3).toString(16)),\n                name: ''\n            });\n            currentByte += 3;\n        }\n        currentByte += 3; // Skip Separator\n        for (let i = 0; i < 5; i++) {\n            this.scores.default[i].name = this.hi!.slice(currentByte, 3).toString(this.charset, 54);\n            currentByte += 3;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n/* FIXME - Not tested */\n@Extractor({\n    name: 'jack'\n})\nexport default class Jack extends AbstractExtractor {\n    protected charset = {\n        0x40: ' ',\n        0x5B: '.'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(i * 9, 6).decodeBCD(),\n                name: this.hi!.slice(i * 9 + 6, 3).toString(this.charset)\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n// TODO : Not tested\n@Extractor({\n    name: 'suprmrio'\n})\nexport default class Suprmrio extends AbstractExtractor {\n    protected charset = {\n        0x24: ' ',\n        0x28: '-',\n        0x2B: '!',\n        0xAF: '.',\n        0xFA: '\\\\',\n    };\n\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.hi!.slice(29 + i * 3, 3).toString(this.charset, 55),\n                score: parseInt(this.hi!.slice(69 + i * 7, 7).nibbleSkip().readIntBE().toString(16))\n            });\n        }\n\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'donpachi'\n})\nexport default class Donpachi extends AbstractExtractor {\n    protected charset = {\n        0x00: ' ',\n        0x38: '.'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.buffer.readIntBE(4 + (i * 4), 4).toString(16)),\n                name: this.hi!.slice(24 + (i * 6), 6).byteSkip(false).byteMap(byte => byte / 2).toString(this.charset, -9)\n                // TODO : Extras\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'hyperspt',\n    hi: false,\n    nvram: 'nvram'\n})\nexport default class Hyperspt extends AbstractExtractor {\n    protected extraIds = [\n        'tripleJump',\n        'shooting',\n        'pole',\n        'freeStyle',\n        'weight',\n        'archery',\n        'horse',\n    ];\n\n    extract(): any {\n        let currentByte = 0; // Jump first 1024 Bytes\n\n        this.output.extras = {};\n        for (const extra of this.extraIds) {\n            this.output.extras[extra] = [];\n            for (let i = 0; i < 4; i++) { // All extras hiscores are by group of 4\n                this.output.extras[extra].push({\n                    rank: i + 1,\n                    score: this.formatScore(this.nvram!.slice(currentByte,5).decodeBCD(), extra),\n                    name: this.nvram!.slice(currentByte + 5, 3).toString({}, 48),\n                    scoreSuffix: this.getScoreSuffix(extra)\n                });\n                currentByte += 8;\n            }\n        }\n        currentByte += 6; // Skip a spacing (6B)\n        for (let i = 0; i < 23; i++) { // Next 160 groups of 5 bytes are default scores\n            this.output.default.push({\n                rank: i + 1,\n                score: parseInt(this.nvram!.buffer.readIntBE(currentByte, 3).toString(16)) * 10,\n                name: this.nvram!.slice(currentByte + 3, 3).toString({}, 48)\n            });\n            currentByte += 6;\n        }\n    }\n\n    protected formatScore(score: number, id: string) {\n        if (['freeStyle', 'tripleJump', 'pole', 'freeStyle', 'horse'].indexOf(id) >= 0) {\n            return score / 100;\n        } else if (id === 'weight') {\n            return score / 10;\n        }\n        return score;\n    }\n\n    protected getScoreSuffix(id: string) {\n        if (id === 'freeStyle') {\n            return 'sec';\n        } else if (id === 'weight') {\n            return 'kg'\n        } else if (id === 'pole' || id === 'tripleJump') {\n            return 'm'\n        }\n        return '';\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'mwalk'\n})\nexport default class Mwalk extends AbstractExtractor {\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 8, 4).readIntBE().toString(16)),\n                name: this.hi!.slice(i * 8 + 5, 3).toString()\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n//TODO : Not tested\n@Extractor({\n    name: 'xevious'\n})\nexport default class Xevious extends AbstractExtractor {\n    protected charset = {\n        0x24: ' ',\n        0x36: 'a',\n        0x37: 'b',\n        0x38: 'c',\n        0x39: 'd',\n        0x3A: 'e',\n        0x3B: 'f',\n        0x3C: 'g',\n        0x3D: 'h',\n        0x3E: 'i',\n        0x3F: 'j',\n        0x40: 'k',\n        0x41: 'l',\n        0x42: 'm',\n        0x43: 'n',\n        0x44: 'o',\n        0x45: 'p',\n        0x46: 'q',\n        0x47: 'r',\n        0x48: 's',\n        0x49: 't',\n        0x4A: 'u',\n        0x4B: 'v',\n        0x4C: 'w',\n        0x4D: 'x',\n        0x4E: 'y',\n        0x4F: 'z',\n        0x50: '.'\n    };\n\n    extract(): any {\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 16, 3).readIntLE().toString(16)) * 10,\n                name: this.hi!.slice(i * 16 + 3, 10).toString(this.charset, 55)\n            })\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'dkongjr'\n})\nexport default class Dkongjr extends AbstractExtractor {\n    protected charset = {\n        0x10: ' ',\n        0x2B: '.',\n        0x2C: '-'\n    };\n\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i< 5; i++) {\n            currentByte += i ? 7 : 2; // Skip debug values\n            this.scores.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(currentByte, 6).decodeBCD(),\n                name: this.hi!.slice(currentByte + 12, 3).toString(this.charset, 48)\n            });\n            currentByte += 27;\n        }\n\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'columns',\n})\nexport default class Columns extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i < 9; i++) {\n            currentByte++; // Skip header\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.hi!.slice(currentByte, 3).toString(),\n                score: this.hi!.buffer.readIntBE(currentByte + 4, 4),\n                // TODO : Extras\n            });\n            currentByte += 15;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'simpsons'\n})\nexport default class Simpsons extends AbstractExtractor {\n    protected charset = {\n        0x40: ' ',\n        0x5B: '.',\n        0x5C: '-',\n        0x5D: '?',\n        0x5E: '!',\n        0x5F: '&',\n        0x60: '@',\n        0x61: '&black-star;',\n        0x62: '$',\n    };\n\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.hi!.slice(i * 8, 3).toString(this.charset),\n                score: parseInt(this.hi!.slice(i * 8 + 3, 2).readIntBE().toString(16))\n            });\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\nimport MHEBuffer from \"../MHEBuffer\";\n\n@Extractor({\n    name: 'punchout',\n    nvram: 'nvram'\n})\nexport default class Punchout extends AbstractExtractor {\n    extract(): any {\n        this.extractNvram();\n        this.extractHi();\n    }\n\n    protected extractNvram() {\n        let currentByte = 30;\n        for (let i = 0; i < 40; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.nvram!.slice(currentByte, 6).byteSwap(2).nibbleSkip(false).toString({}, 55),\n                score: this.nvram!.slice(currentByte + 6, 6).nibbleSkip(false).toHexNumber(true)\n            });\n            currentByte += 12;\n        }\n    }\n\n    protected extractHi() {\n        let rank = this.scores.default.length;\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: rank + i + 1,\n                name: this.hi!.slice(i * 8 + 2, 3).toString({}, 55),\n                score: parseInt(this.hi!.slice(i * 8 + 5, 3).readIntLE().toString(16))\n            });\n        }\n    }\n}\n","import AbstractExtractor from '../AbstractExtractor';\nimport Extractor from '../Decorator/Extractor';\n\n@Extractor({\n    name: 'bublbobl',\n    hi: true\n})\nexport default class Bublbobl extends AbstractExtractor {\n    extract() {\n        let currentByte = 0;\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.buffer.readIntLE(currentByte, 3).toString(16)) * 10,\n                name: this.hi!.slice(currentByte + 4, 3).toString(),\n                // TODO : Extras SCORE\n            });\n            currentByte += 7;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'defender',\n    hi: false,\n    nvram: 'nvram'\n})\nexport default class Defender extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 29; // Skip\n        for (let i = 0; i < 8; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: this.nvram!.slice(currentByte, 6).decodeBCD(),\n                name: this.nvram!.slice(currentByte + 6, 6).nibbleSkip(false).toString()\n            });\n            currentByte += 12;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'pacmania'\n})\nexport default class Pacmania extends AbstractExtractor {\n    protected charset = {\n        0x20: ' ',\n        0x21: '!',\n        0x26: '&',\n        0x27: '\\\\',\n        0x2C: ',',\n        0x2E: '.',\n    };\n\n    extract(): any {\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: parseInt(this.hi!.slice(i * 8, 4).readIntBE().toString(16)) * 10,\n                name: this.hi!.slice(i * 8 + 5, 3).toString(this.charset)\n            });\n        }\n    }\n}\n","import Extractor from \"../Decorator/Extractor\";\nimport AbstractExtractor from \"../AbstractExtractor\";\n\n@Extractor({\n    name: 'spang'\n})\nexport default class Spang extends AbstractExtractor {\n    protected charset: { [key: number]: string } = {\n        0x80: 'A',\n        0x82: 'B',\n        0x84: 'C',\n        0x86: 'D',\n        0x88: 'E',\n        0x8A: 'F',\n        0x8C: 'G',\n        0x8E: 'H',\n        0xA0: 'I',\n        0xA2: 'J',\n        0xA4: 'K',\n        0xA6: 'L',\n        0xA8: 'M',\n        0xAA: 'N',\n        0xAC: 'O',\n        0xAE: 'P',\n        0xC0: 'Q',\n        0xC2: 'R',\n        0xC4: 'S',\n        0xC6: 'T',\n        0xC8: 'U',\n        0xCA: 'V',\n        0xCC: 'W',\n        0xCE: 'X',\n        0xE0: 'Y',\n        0xE2: 'Z'\n    };\n\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i < 5; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(currentByte + 1, 3).toHexNumber(),\n                name: this.hi!.slice(currentByte + 5, 6).byteSkip(true).toString(this.charset)\n            });\n            currentByte += 16;\n        }\n\n        this.scores.extras = {panic: []};\n\n        for (let i = 0; i < 5; i++) {\n            this.scores.extras.panic.push({\n                rank: i + 1,\n                score: this.hi!.slice(currentByte + 1, 3).toHexNumber(),\n                name: this.hi!.slice(currentByte + 5, 6).byteSkip(true).toString(this.charset)\n            });\n            currentByte += 16;\n        }\n    }\n}\n","import Invaddlx from \"./Invaddlx\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'invadpt2'\n})\nexport default class Invadpt2 extends Invaddlx {\n\n}\n","import Aburner from \"./Aburner\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'aburner2'\n})\nexport default class Aburner2 extends Aburner {}\n","import Ddragon from \"./Ddragon\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'ddragon2'\n})\nexport default class Ddragon2 extends Ddragon {}\n","import Galaga from \"./Galaga\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'galagamk'\n})\nexport default class Galagamk extends Galaga {}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'hsf2'\n})\nexport default class Hsf2 extends AbstractExtractor {\n    protected charset = {\n        0x20: ' ',\n        0x2E: '.',\n    };\n\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i++; i < 5) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(currentByte, 4).toHexNumber(),\n                name: this.hi!.slice(currentByte + 4, 3).toString(this.charset)\n            });\n            currentByte += 8;\n        }\n    }\n}\n","import Mk from \"./Mk\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'mk2'\n})\nexport default class Mk2 extends Mk {}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'mslug',\n    hi: false,\n    nvram: 'saveram'\n})\nexport default class Mslug extends AbstractExtractor {\n    protected charset = {\n        0x0B82: 'A',\n        0x0B84: 'B',\n        0x0B86: 'C',\n        0x0B88: 'D',\n        0x0B8A: 'E',\n        0x0B8C: 'F',\n        0x0B8E: 'G',\n        0x0C80: 'H',\n        0x0C82: 'I',\n        0x0C84: 'J',\n        0x0C86: 'K',\n        0x0C88: 'L',\n        0x0C8A: 'M',\n        0x0C8C: 'N',\n        0x0C8E: 'O',\n        0x0BA0: 'P',\n        0x0BA2: 'Q',\n        0x0BA4: 'R',\n        0x0BA6: 'S',\n        0x0BA8: 'T',\n        0x0BAA: 'U',\n        0x0BAC: 'V',\n        0x0BAE: 'W',\n        0x0CA0: 'X',\n        0x0CA2: 'Y',\n        0x0CA4: 'Z',\n        0x0B60: '0',\n        0x0B62: '1',\n        0x0B64: '2',\n        0x0B66: '3',\n        0x0B68: '4',\n        0x0B6A: '5',\n        0x0B6C: '6',\n        0x0B6E: '7',\n        0x0C60: '8',\n        0x0C62: '9',\n        0x0C6E: '?',\n        0x0B42: '!',\n        0x0C4C: '.',\n        0x0B40: ' ',\n    };\n\n    extract(): any {\n        this.nvram!.byteSwap(2);\n        let currentByte = 804;\n        for (let i = 0; i < 10; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                score: this.nvram!.slice(currentByte, 4).toHexNumber(),\n                name: this.nvram!.slice(currentByte + 4, 6).toString16(this.charset)\n            });\n            currentByte += 12;\n        }\n    }\n}\n\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: '88games',\n    hi: false,\n    nvram: 'nvram'\n})\nexport default class Extractor88Games extends AbstractExtractor {\n    protected extraCharset = {\n        0x0d: '.'\n    };\n\n    protected defaultCharset = {\n        0x0E: '.'\n    };\n\n    extract(): any {\n\n        let extraIds = [\n            'run',\n            'longJump',\n            'hurdles',\n            'highJump',\n            'archery',\n            'shoot',\n            'javelin',\n            'relay',\n        ];\n\n        let currentByte = 880;\n        this.scores.extras = {test: []};\n\n        for (const extra of extraIds) {\n            this.scores.extras[extra] = [];\n\n            for (let i = 0; i < 3; i++) {\n                this.scores.extras[extra].push({\n                    rank: i + 1,\n                    name: this.nvram!.slice(currentByte, 3).toString(this.extraCharset, 48),\n                    score: this.formatScore(this.nvram!.slice(currentByte + 72, 3).toHexNumber(), extra),\n                    scoreSuffix: this.getScoreSuffix(extra)\n                });\n                currentByte += 3;\n            }\n\n        }\n        currentByte+=72; // Jump extras scores\n\n        for (let i = 0; i < 100; i++) {\n            this.scores.default.push({\n                rank: i + 1,\n                name: this.nvram!.slice(currentByte, 3).toString(this.defaultCharset, 48),\n                score: this.nvram!.slice(currentByte + 3, 3).toHexNumber() * 10,\n            });\n            currentByte += 6;\n        }\n    }\n\n    protected formatScore(score: number, extra: string) {\n        if (['run', 'longJump', 'hurdles', 'highJump', 'relay'].indexOf(extra) >= 0) {\n            return score / 10000;\n        } else if (extra === 'javelin') {\n            return score / 100\n        }\n        return score / 10;\n    }\n\n    protected getScoreSuffix(extra: string) {\n        if (['run', 'hurdles', 'relay'].indexOf(extra) >= 0) {\n            return 's'\n        } else if (['longJump', 'highJump', 'javelin'].indexOf(extra) >= 0) {\n            return 'm'\n        }\n        return '';\n    }\n}\n","import Extractor from \"../Decorator/Extractor\";\nimport AbstractExtractor from \"../AbstractExtractor\";\n\n@Extractor({\n    name: 'outrun'\n})\nexport default class Outrun extends AbstractExtractor {\n    protected charset = {\n        0x5B: '.'\n    };\n\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i < 7; i++) {\n            this.output.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(currentByte, 4).toHexNumber() * 100,\n                name: this.hi!.slice(currentByte + 4, 3).toString(this.charset)\n            })\n            currentByte += 14\n        }\n    }\n}\n","import Extractor from \"../Decorator/Extractor\";\nimport AbstractExtractor from \"../AbstractExtractor\";\n\n@Extractor({\n    name: 'outzone'\n})\nexport default class Outzone extends AbstractExtractor {\n    protected charset = {\n        0x00: ' '\n    };\n\n    extract(): any {\n        let currentByte = 4;\n        for (let i = 0; i < 5; i++) {\n            this.output.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(currentByte, 4).toHexNumber(),\n                name: ''\n            });\n            currentByte += 4\n        }\n        for (let i = 0; i < 5; i++) {\n            this.output.default[i].name = this.hi!.slice(currentByte, 12)\n                .byteMask('FF000000FF000000FF000000').toString(this.charset);\n            currentByte += 16;\n        }\n    }\n}\n","import Extractor from \"../Decorator/Extractor\";\nimport AbstractExtractor from \"../AbstractExtractor\";\n\n/*\n    Bouldash do not sort by scores, it's juste a player list\n */\n@Extractor({\n    name: 'bouldash'\n})\nexport default class Bouldash extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 0;\n        for (let i = 0; i < 7; i++) {\n            this.output.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(currentByte, 3).toHexNumber() * 10,\n                name: this.hi!.slice(currentByte + 5, 3).toString()\n            });\n            currentByte += 10;\n        }\n    }\n}\n","import Extractor from \"../Decorator/Extractor\";\nimport AbstractExtractor from \"../AbstractExtractor\";\n\n@Extractor({\n    name: 'snowbros'\n})\nexport default class Snowbros extends AbstractExtractor {\n    extract(): any {\n        let currentByte = 4;\n        for (let i = 0; i < 5; i++) {\n            this.output.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(currentByte, 4).toHexNumber(),\n                name: ''\n            });\n            currentByte += 4\n        }\n        currentByte += 10; // Skip floor\n        for (let i = 0; i < 5; i++) {\n            this.output.default[i].name = this.hi!.slice(currentByte, 6).byteSkip(false).toString();\n            currentByte += 6;\n        }\n    }\n}\n","import AbstractExtractor from \"../AbstractExtractor\";\nimport Extractor from \"../Decorator/Extractor\";\n\n@Extractor({\n    name: 'intrepid'\n})\nexport default class Intrepid extends AbstractExtractor {\n    protected charset = {\n        0xFD: '-',\n        0x24: ' ',\n        0x01: '1',\n        0x02: '2',\n        0x03: '3',\n        0x04: '4',\n        0x05: '5',\n        0x06: '6',\n        0x07: '7',\n        0x08: '8',\n        0x09: '9',\n    };\n\n    extract(): any {\n        let currentByte = 1;\n        for (let i = 0; i < 10; i++) {\n            this.output.default.push({\n                rank: i + 1,\n                score: this.hi!.slice(currentByte, 3).byteSwap(3).toHexNumber() * 10,\n                name: this.hi!.slice(currentByte + 3, 3).toString(this.charset, 55)\n            });\n            currentByte += 6;\n        }\n    }\n}\n"],"sourceRoot":""}